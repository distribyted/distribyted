{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Distribyted is an alternative torrent client. It can expose torrent files as a standard FUSE mount or webDAV endpoint and download them on demand, allowing random reads using a fixed amount of disk space. Features \u00b6 User Interfaces \u00b6 Distribyted supports several ways to expose the files to the user or external applications: Supported \u00b6 FUSE: Other applications can access to torrent files directly as a filesystem. WebDAV: Applications that supports WebDAV can access torrent files using this protocol. It is recommended when distribyted is running in a remote machine or using docker. HTTP: A simple HTTP interface for all the available routes. You can acces it from http://[HOST]:[PORT]/fs Expandable File Formats \u00b6 Distribyted can show some kind of files directly as folders, making it possible for applications read only the parts that they need. Here is a list of supported, to be supported and not supported formats. Supported \u00b6 zip: Able to uncompress just one file. The file is decompressed to a temporal file sequentially to make possible seek over it. The decompression stops if no one is reading it. rar: Thanks to rardecode experimental branch library, it is possible to seek through rar files. 7zip: Thanks to sevenzip library, it is possible to read 7z files in a similar way that is done using the zip implementation. To Be Supported \u00b6 xz: Only worth it when the file is created using blocks. Possible library here and here . Not Supported \u00b6 gzip: As far as I know, it doesn't support random access.","title":"Home"},{"location":"#features","text":"","title":"Features"},{"location":"#user-interfaces","text":"Distribyted supports several ways to expose the files to the user or external applications:","title":"User Interfaces"},{"location":"#supported","text":"FUSE: Other applications can access to torrent files directly as a filesystem. WebDAV: Applications that supports WebDAV can access torrent files using this protocol. It is recommended when distribyted is running in a remote machine or using docker. HTTP: A simple HTTP interface for all the available routes. You can acces it from http://[HOST]:[PORT]/fs","title":"Supported"},{"location":"#expandable-file-formats","text":"Distribyted can show some kind of files directly as folders, making it possible for applications read only the parts that they need. Here is a list of supported, to be supported and not supported formats.","title":"Expandable File Formats"},{"location":"#supported_1","text":"zip: Able to uncompress just one file. The file is decompressed to a temporal file sequentially to make possible seek over it. The decompression stops if no one is reading it. rar: Thanks to rardecode experimental branch library, it is possible to seek through rar files. 7zip: Thanks to sevenzip library, it is possible to read 7z files in a similar way that is done using the zip implementation.","title":"Supported"},{"location":"#to-be-supported","text":"xz: Only worth it when the file is created using blocks. Possible library here and here .","title":"To Be Supported"},{"location":"#not-supported","text":"gzip: As far as I know, it doesn't support random access.","title":"Not Supported"},{"location":"api-reference/","text":"TBD","title":"API Reference"},{"location":"architecture/","text":"TBD","title":"Architecture"},{"location":"getting-started/","text":"Installation \u00b6 Using the binary \u00b6 Get the latest release from [releases][releases-url] page or download the source code and execute make build . Run the program: ./distribyted-[VERSION]-[OS]-[ARCH] Defaults are good enough for starters, but you can change them. Here is the output of ./distribyted -help : NAME: distribyted - Torrent client with on-demand file downloading as a filesystem. USAGE: distribyted [global options] [arguments...] GLOBAL OPTIONS: --config value YAML file containing distribyted configuration. (default: \"./distribyted-data/config.yaml\") [$DISTRIBYTED_CONFIG] --http-port value HTTP port for web interface (default: 4444) [$DISTRIBYTED_HTTP_PORT] --fuse-allow-other Allow other users to acces to all fuse mountpoints. You need to add user_allow_other flag to /etc/fuse.conf file. (default: false) [$DISTRIBYTED_FUSE_ALLOW_OTHER] --help, -h show help (default: false) Prerequisites on windows \u00b6 Download and install WinFsp . Using Docker \u00b6 Docker run example: docker run \\ --rm -p 4444 :4444 -p 36911 :36911 \\ --cap-add SYS_ADMIN \\ --device /dev/fuse \\ --security-opt apparmor:unconfined \\ -v /tmp/mount:/distribyted-data/mount:shared \\ -v /tmp/metadata:/distribyted-data/metadata \\ -v /tmp/config:/distribyted-data/config \\ distribyted/distribyted:latest Docker compose example: distribyted : container_name : distribyted image : distribyted/distribyted:latest restart : always ports : - \"4444:4444/tcp\" - \"36911:36911/tcp\" volumes : - /home/user/mount:/distribyted-data/mount:shared - /home/user/metadata:/distribyted-data/metadata - /home/user/config:/distribyted-data/config security_opt : - apparmor:unconfined devices : - /dev/fuse cap_add : - SYS_ADMIN Usage \u00b6 After executing and load all torrent or magnet files, a web interface will be available at http://localhost:4444 It contains information about the mounted routes and torrent files like download/upload speed, leechers, seeders... Configuration File \u00b6 You can see the default configuration file with some explanation comments here . Routes \u00b6 Here there is a list of all available routes with their torrents and some info. You can add and remove torrents from here too. Servers \u00b6 Servers is a way to generate magnet files from folders. All servers configured using the config yaml file will be here. When some data is changed on these folders, a new magnet URI will be generated. You can share that magnet URI with anyone to share these files. Logs \u00b6 You can check logs in real time from the web interface:","title":"Getting Started"},{"location":"getting-started/#installation","text":"","title":"Installation"},{"location":"getting-started/#using-the-binary","text":"Get the latest release from [releases][releases-url] page or download the source code and execute make build . Run the program: ./distribyted-[VERSION]-[OS]-[ARCH] Defaults are good enough for starters, but you can change them. Here is the output of ./distribyted -help : NAME: distribyted - Torrent client with on-demand file downloading as a filesystem. USAGE: distribyted [global options] [arguments...] GLOBAL OPTIONS: --config value YAML file containing distribyted configuration. (default: \"./distribyted-data/config.yaml\") [$DISTRIBYTED_CONFIG] --http-port value HTTP port for web interface (default: 4444) [$DISTRIBYTED_HTTP_PORT] --fuse-allow-other Allow other users to acces to all fuse mountpoints. You need to add user_allow_other flag to /etc/fuse.conf file. (default: false) [$DISTRIBYTED_FUSE_ALLOW_OTHER] --help, -h show help (default: false)","title":"Using the binary"},{"location":"getting-started/#prerequisites-on-windows","text":"Download and install WinFsp .","title":"Prerequisites on windows"},{"location":"getting-started/#using-docker","text":"Docker run example: docker run \\ --rm -p 4444 :4444 -p 36911 :36911 \\ --cap-add SYS_ADMIN \\ --device /dev/fuse \\ --security-opt apparmor:unconfined \\ -v /tmp/mount:/distribyted-data/mount:shared \\ -v /tmp/metadata:/distribyted-data/metadata \\ -v /tmp/config:/distribyted-data/config \\ distribyted/distribyted:latest Docker compose example: distribyted : container_name : distribyted image : distribyted/distribyted:latest restart : always ports : - \"4444:4444/tcp\" - \"36911:36911/tcp\" volumes : - /home/user/mount:/distribyted-data/mount:shared - /home/user/metadata:/distribyted-data/metadata - /home/user/config:/distribyted-data/config security_opt : - apparmor:unconfined devices : - /dev/fuse cap_add : - SYS_ADMIN","title":"Using Docker"},{"location":"getting-started/#usage","text":"After executing and load all torrent or magnet files, a web interface will be available at http://localhost:4444 It contains information about the mounted routes and torrent files like download/upload speed, leechers, seeders...","title":"Usage"},{"location":"getting-started/#configuration-file","text":"You can see the default configuration file with some explanation comments here .","title":"Configuration File"},{"location":"getting-started/#routes","text":"Here there is a list of all available routes with their torrents and some info. You can add and remove torrents from here too.","title":"Routes"},{"location":"getting-started/#servers","text":"Servers is a way to generate magnet files from folders. All servers configured using the config yaml file will be here. When some data is changed on these folders, a new magnet URI will be generated. You can share that magnet URI with anyone to share these files.","title":"Servers"},{"location":"getting-started/#logs","text":"You can check logs in real time from the web interface:","title":"Logs"},{"location":"tutorials/","text":"TBD","title":"Tutorials"}]}